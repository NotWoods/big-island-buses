{"version":3,"file":"main.js","sources":["../src/page/utils/num.ts","../src/page/load.ts","../src/page/utils/date.ts","../src/page/main.ts","../src/page/sidebar.ts"],"sourcesContent":["export const toInt = (n: string) => Number.parseInt(n, 10);\n","/**\n * Contains construstors and helper functions.  Avoids using the DOM for functions.\n * @author       Tiger Oakes <tigeroakes@gmail.com>\n * @copyright    2014 Tiger Oakes\n */\n\nimport { GTFSData, Stop, Trip } from '../gtfs-types';\nimport { toInt } from './utils/num';\n\nexport const enum Type {\n  ROUTE,\n  STOP,\n  TRIP,\n}\nexport const enum View {\n  LIST,\n\n  MAP_PRIMARY,\n  STREET_PRIMARY,\n}\n\nexport interface ActiveState {\n  Route: {\n    ID: string | null;\n    TRIP: string | null;\n  };\n  STOP: string | null;\n  View: {\n    ROUTE: View;\n    STOP: View;\n  };\n}\n\nexport let Active: ActiveState = {\n  Route: {\n    ID: null,\n    TRIP: null,\n  },\n  STOP: null,\n  View: {\n    ROUTE: View.LIST,\n    STOP: View.MAP_PRIMARY,\n  },\n};\n\nexport const updateEvent = new CustomEvent('pageupdate');\n\nnavigator.serviceWorker?.register('service-worker.js');\n\n/**\n * @type {Record<Type, Function>}\n */\nexport const openCallbacks: Record<Type, Function> = {} as any;\n\nexport const normal = {\n    url: 'assets/pins.png',\n    size: { height: 26, width: 24 },\n    scaledSize: { height: 26, width: 120 },\n    origin: { x: 0, y: 0 },\n    anchor: { x: 12, y: 12 },\n  } as google.maps.Icon,\n  unimportant = {\n    url: 'assets/pins.png',\n    size: { height: 26, width: 24 },\n    scaledSize: { height: 26, width: 120 },\n    origin: { x: 96, y: 0 },\n    anchor: { x: 12, y: 12 },\n  } as google.maps.Icon,\n  userShape = {\n    url: 'assets/pins.png',\n    size: { height: 26, width: 24 },\n    scaledSize: { height: 26, width: 120 },\n    origin: { x: 48, y: 0 },\n    anchor: { x: 12, y: 12 },\n  } as google.maps.Icon,\n  placeShape = {\n    url: 'assets/pins.png',\n    size: { height: 26, width: 24 },\n    scaledSize: { height: 26, width: 120 },\n    origin: { x: 72, y: 0 },\n    anchor: { x: 12, y: 23 },\n  } as google.maps.Icon,\n  stopShape = {\n    url: 'assets/pins.png',\n    size: { height: 26, width: 24 },\n    scaledSize: { height: 26, width: 120 },\n    origin: { x: 24, y: 0 },\n    anchor: { x: 12, y: 20 },\n  } as google.maps.Icon;\n\nexport function setActiveState(newState: ActiveState) {\n  Active = newState;\n}\n\n/**\n * Grabs the API data and parses it into a GTFSData object for the rest of the program.\n */\nexport function getScheduleData(): Promise<GTFSData> {\n  return fetch('api.json')\n    .then(res => {\n      if (res.ok) return res.json();\n      throw new Error(res.statusText);\n    })\n    .then(json => json as GTFSData);\n}\n\nexport function createElement<Tag extends keyof HTMLElementTagNameMap>(\n  type: Tag,\n  props: Partial<HTMLElementTagNameMap[Tag]>,\n) {\n  return Object.assign(document.createElement(type), props);\n}\n\nfunction getCurrentPosition() {\n  return new Promise<Position>((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n}\n\nexport interface LocationUpdate {\n  stop: Stop['stop_id'];\n  location: Pick<Coordinates, 'latitude' | 'longitude'>;\n  custom: boolean;\n}\n\n/**\n * Locates the nearest bus stop to the user or custom location\n * @param {Promise} schedulePromise Schedule promise to wait for\n * @param {Coordinates} customLocation Location to use instead of GPS\n */\nlet runOnce = false;\nexport function locateUser(\n  busPromise: Promise<GTFSData>,\n  customLocation?: Pick<Coordinates, 'latitude' | 'longitude'>,\n): Promise<LocationUpdate> {\n  let locatePromise: Promise<{\n    coords: Pick<Coordinates, 'latitude' | 'longitude'>;\n    customLocationFlag?: boolean;\n  }>;\n  if (customLocation) {\n    locatePromise = Promise.resolve({\n      coords: customLocation,\n      customLocationFlag: true,\n    });\n  } else {\n    locatePromise = getCurrentPosition();\n  }\n\n  let closestDistance = Number.MAX_VALUE;\n  let closestStop: Stop['stop_id'];\n\n  return Promise.all([locatePromise, busPromise]).then(([e, schedule]) => {\n    const userPos = e.coords;\n    for (const stop_id of Object.keys(schedule.stops)) {\n      const stop = schedule.stops[stop_id];\n      const distance = Math.sqrt(\n        Math.pow(userPos.latitude - parseFloat(stop.stop_lat), 2) +\n          Math.pow(userPos.longitude - parseFloat(stop.stop_lon), 2),\n      );\n      if (distance < closestDistance) {\n        closestStop = stop_id;\n        closestDistance = distance;\n      }\n    }\n    if (closestStop) {\n      const results = {\n        stop: closestStop,\n        location: userPos,\n        custom: e.customLocationFlag ? true : false,\n      };\n      if (runOnce) {\n        window.dispatchEvent(\n          new CustomEvent('locationupdate', {\n            detail: results,\n          }),\n        );\n      }\n      return results;\n    } else {\n      throw Error(JSON.stringify(userPos));\n    }\n  });\n}\n\n/**\n * Creates a promise version of the document load event\n * @return {Promise<DocumentReadyState>} resolves if document has loaded\n */\nexport function documentLoad() {\n  if (\n    document.readyState === 'interactive' ||\n    document.readyState === 'complete'\n  ) {\n    return Promise.resolve(document.readyState);\n  }\n\n  return new Promise(resolve => {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'interactive') {\n        resolve(document.readyState);\n      }\n    });\n  });\n}\n\n/**\n * Generates a link for href values. Meant to maintain whatever active data is avaliable.\n * @param {Type} type  \t\tType of item to change\n * @param {string} value \tID to change\n * @return {string} URL to use for href, based on active object.\n */\nfunction pageLink(type: Type, value: string) {\n  const params = new URLSearchParams();\n  switch (type) {\n    case Type.ROUTE:\n      params.set('route', value);\n\n      if (Active.Route.TRIP != null) {\n        params.set('trip', Active.Route.TRIP);\n      }\n\n      if (Active.STOP != null) {\n        params.set('stop', Active.STOP);\n      }\n      break;\n    case Type.STOP:\n      if (Active.Route.ID != null) {\n        params.set('route', Active.Route.ID);\n      }\n      params.set('stop', value);\n      if (Active.Route.TRIP != null) {\n        params.set('trip', Active.Route.TRIP);\n      }\n      break;\n    case Type.TRIP:\n      params.set('route', Active.Route.ID!);\n      params.set('trip', value);\n      if (Active.STOP != null) {\n        params.set('stop', Active.STOP);\n      }\n      break;\n    default:\n      console.warn('Invalid type provided for link: %i', type);\n      break;\n  }\n  return `#!${params}`;\n}\n\nexport interface Linkable {\n  Type: Type;\n  Value: string;\n}\n\ntype DynamicLinkNode = HTMLAnchorElement & Linkable;\n\n/**\n * Converts an A element into an automatically updating link.\n * @param  {Type} type      What value to change in link\n * @param  {string} value   Value to use\n * @param  {boolean} update Wheter or not to listen for \"pageupdate\" event and update href\n * @return {Node}           A element with custom properties\n */\nexport function convertToLinkable(node: HTMLAnchorElement, type: Type, value: string, update?: boolean) {\n  Object.assign(node, { Type: type, Value: value, href: pageLink(type, value) });\n  node.href = pageLink(type, value);\n  node.addEventListener('click', clickEvent);\n  if (update) {\n    node.addEventListener('pageupdate', function() {\n      node.href = pageLink(type, value);\n    });\n  }\n\n  return node;\n}\n\n/**\n * Creates an A element with custom click events for links.  Can update itself.\n * @param  {Type} type      What value to change in link\n * @param  {string} value   Value to use\n * @param  {boolean} update Wheter or not to listen for \"pageupdate\" event and update href\n * @return {Node}           A element with custom properties\n */\nexport function dynamicLinkNode(type: Type, value: string, update?: boolean) {\n  const node = document.createElement('a') as DynamicLinkNode;\n  return convertToLinkable(node, type, value, update);\n}\n\n/**\n * Navigate to the page described by the `Linkable`.\n */\nexport function openLinkable(link: Linkable) {\n  const state = Active;\n  const val = link.Value;\n  const newLink = pageLink(link.Type, val);\n  const callback = openCallbacks[link.Type];\n  switch (link.Type) {\n    case Type.ROUTE:\n      state.Route.ID = val;\n      break;\n    case Type.STOP:\n      state.STOP = val;\n      break;\n    case Type.TRIP:\n      state.Route.TRIP = val;\n      break;\n  }\n  callback(val);\n  history.pushState(state, null as any, newLink);\n  ga?.('send', 'pageview', { page: newLink, title: document.title });\n}\n\n/**\n * Used for the click event of a dynamicLinkNode\n * @param  {Event} e\n */\nexport function clickEvent(this: Linkable, e: Event) {\n  e.preventDefault?.();\n  e.stopPropagation?.();\n  openLinkable(this);\n  return false;\n}\n\n/**\n * Returns an object with URL variables.\n */\nexport function getQueryVariables(): Partial<Record<string, string>> {\n  let query = '';\n  let vars: string[];\n  if (window.location.hash.indexOf('#!') > -1) {\n    query = window.location.hash.substring(\n      window.location.hash.indexOf('#!') + 2,\n    );\n    vars = query.split('&');\n  } else if (window.location.search.indexOf('_escaped_fragment_') > -1) {\n    query = window.location.search.substring(\n      window.location.search.indexOf('_escaped_fragment_') + 19,\n    );\n    vars = query.split('%26');\n  }\n\n  const result: Partial<Record<string, string>> = {};\n  if (query !== '') {\n    for (const parts of vars!) {\n      const [key, value] = parts.split('=');\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Sorts stop time keys\n * @param {GTFSData stop_times} stopTimes\n * @return ordered list\n */\nexport function sequence(stopTimes: Trip['stop_times']): string[] {\n  const stopSequence = [];\n  for (const key in stopTimes) {\n    stopSequence.push(key);\n  }\n  return stopSequence.sort((a, b) => toInt(a) - toInt(b));\n}\n","import { toInt } from './num.js';\n\n/**\n * Turns a date into a string with hours, minutes.\n * @param  {Date} \tdate Date to convert\n * @param  {string} date 24hr string in format 12:00:00 to convert to string in 12hr format\n * @return {string}    \tString representation of time\n */\nexport function stringTime(date: Date | string): string {\n  if (typeof date === 'string') {\n    if (date.indexOf(':') > -1 && date.lastIndexOf(':') > date.indexOf(':')) {\n      const [hour, min, second] = date.split(':').map(toInt);\n      date = new Date(0, 0, 0, hour, min, second, 0);\n    }\n  }\n  if (typeof date != 'object') {\n    throw new TypeError(`date must be Date or string, not ${typeof date}`);\n  }\n\n  let m = 'am';\n  let displayHour = '';\n  let displayMinute = '';\n  const hr = date.getHours();\n  const min = date.getMinutes();\n\n  if (hr === 0) {\n    displayHour = '12';\n  } else if (hr === 12) {\n    displayHour = '12';\n    m = 'pm';\n  } else if (hr > 12) {\n    const mathHr = hr - 12;\n    displayHour = mathHr.toString();\n    m = 'pm';\n  } else {\n    displayHour = hr.toString();\n  }\n\n  if (min === 0) {\n    displayMinute = '';\n  } else if (min < 10) {\n    displayMinute = ':0' + min.toString();\n  } else {\n    displayMinute = ':' + min.toString();\n  }\n\n  return displayHour + displayMinute + m;\n}\n\n/**\n * Returns a date object based on the string given\n * @param  {string} string in format 13:00:00, from gtfs data\n * @return {Date}\n */\nexport function gtfsArrivalToDate(string: string): Date {\n  const [hour, min, second] = string.split(':').map(s => toInt(s));\n  let extraDays = 0;\n  let extraHours = 0;\n  if (hour > 23) {\n    extraDays = Math.floor(hour / 24);\n    extraHours = hour % 24;\n  }\n  return new Date(0, 0, 0 + extraDays, hour + extraHours, min, second, 0);\n}\n\n/**\n * Combines stringTime() and gtfsArrivalToDate()\n * @param  {string} string in format 13:00:00, from gtfs data\n * @return {string}        String representation of time\n */\nexport function gtfsArrivalToString(string: string) {\n  return stringTime(gtfsArrivalToDate(string));\n}\n\n/**\n * Returns the current time, with date stripped out\n * @return {Date} Current time in hour, min, seconds; other params set to 0\n */\nexport function nowDateTime(): Date {\n  const now = new Date();\n  return new Date(\n    0,\n    0,\n    0,\n    now.getHours(),\n    now.getMinutes(),\n    now.getSeconds(),\n    0,\n  );\n}\n","/**\n * Contains code to build UI. Interacts with DOM.\n * @author       Tiger Oakes <tigeroakes@gmail.com>\n * @copyright    2014 Tiger Oakes\n */\n\nimport { GTFSData, Route, Stop, Trip } from '../gtfs-types.js';\nimport {\n  Active,\n  ActiveState,\n  clickEvent,\n  documentLoad,\n  dynamicLinkNode,\n  getQueryVariables,\n  getScheduleData,\n  Linkable,\n  locateUser,\n  LocationUpdate,\n  normal,\n  openCallbacks,\n  placeShape,\n  sequence,\n  setActiveState,\n  stopShape,\n  Type,\n  unimportant,\n  updateEvent,\n  userShape,\n  View,\n  createElement,\n} from './load.js';\nimport {\n  gtfsArrivalToDate,\n  gtfsArrivalToString,\n  nowDateTime,\n  stringTime,\n} from './utils/date.js';\nimport { toInt } from './utils/num.js';\nimport { hydrateAside } from './sidebar.js';\n\nlet map: google.maps.Map | undefined;\nlet streetview: google.maps.StreetViewPanorama | undefined;\nlet autocomplete: google.maps.places.Autocomplete | undefined;\nlet boundsAllStops: google.maps.LatLngBounds | undefined;\nlet markers: StopMarker[] = [];\nlet userMapMarker: LinkableMarker | undefined;\nlet stopMarker: google.maps.Marker | undefined;\n\nconst documentPromise = documentLoad();\nconst schedulePromise = getScheduleData();\nconst locatePromise = locateUser(schedulePromise);\nlet placeMapMarker: LinkableMarker | undefined;\ntry {\n  loadMap();\n} catch (err) {\n  console.error(err);\n  locatePromise.then(function(position) {\n    if (!Active.STOP) openStop(position.stop);\n  });\n}\n\ntype LinkableMarker = google.maps.Marker & Linkable;\ninterface StopMarker extends LinkableMarker {\n  stop_id: string;\n  activeInRoute?: boolean;\n}\n\nfunction stopToPos(stop: Stop) {\n  return new google.maps.LatLng(\n    parseFloat(stop.stop_lat),\n    parseFloat(stop.stop_lon),\n  );\n}\n\nfunction loadMap() {\n  if (\n    !navigator.onLine ||\n    typeof google !== 'object' ||\n    typeof google.maps !== 'object'\n  ) {\n    documentPromise.then(function() {\n      document.body.classList.add('no-map');\n    });\n    throw new Error('Google Maps API has not loaded');\n  }\n  boundsAllStops = new google.maps.LatLngBounds();\n  markers = [];\n\n  function markersAndLatLng(schedule: GTFSData) {\n    return Promise.resolve().then(() => {\n      for (const stop of Object.values(schedule.stops)) {\n        const marker = new google.maps.Marker({\n          position: stopToPos(stop),\n          title: stop.stop_name,\n          icon: normal,\n        }) as StopMarker;\n        marker.Type = Type.STOP;\n        marker.Value = stop.stop_id;\n        marker.stop_id = stop.stop_id;\n        google.maps.event.addListener(marker, 'click', clickEvent);\n        boundsAllStops!.extend(marker.getPosition()!);\n        markers.push(marker);\n      }\n      return {\n        markers: markers,\n        bounds: boundsAllStops!,\n      };\n    });\n  }\n\n  function mapLoad() {\n    return Promise.resolve().then(() => {\n      const mapElement =\n        Active.View.STOP === View.MAP_PRIMARY\n          ? document.getElementById('map-canvas')!\n          : document.getElementById('streetview-canvas')!;\n      const panoElement =\n        Active.View.STOP === View.STREET_PRIMARY\n          ? document.getElementById('map-canvas')!\n          : document.getElementById('streetview-canvas')!;\n\n      map = new google.maps.Map(mapElement, {\n        center: new google.maps.LatLng(19.6, -155.56),\n        zoom: 10,\n        mapTypeControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n        },\n        panControlOptions: {\n          position: google.maps.ControlPosition.RIGHT_TOP,\n        },\n        streetViewControlOptions: {\n          position: google.maps.ControlPosition.RIGHT_TOP,\n        },\n        zoomControlOptions: {\n          position: google.maps.ControlPosition.RIGHT_TOP,\n        },\n      });\n\n      streetview = new google.maps.StreetViewPanorama(panoElement, {\n        position: new google.maps.LatLng(19.723835, -155.084741),\n        visible: true,\n        pov: { heading: 34, pitch: 0 },\n        scrollwheel: false,\n        panControlOptions: {\n          position: google.maps.ControlPosition.RIGHT_CENTER,\n        },\n        zoomControlOptions: {\n          style: google.maps.ZoomControlStyle.SMALL,\n          position: google.maps.ControlPosition.RIGHT_CENTER,\n        },\n        addressControl: false,\n      });\n      map.setStreetView(streetview!);\n\n      autocomplete = new google.maps.places.Autocomplete(\n        document.getElementById('search') as HTMLInputElement,\n      );\n      autocomplete.bindTo('bounds', map);\n      google.maps.event.addListener(autocomplete, 'place_changed', function() {\n        const place = autocomplete!.getPlace();\n        if (!place.geometry) return;\n        const loc = place.geometry.location;\n        console.log('Lat %s, Lon %s', loc.lat(), loc.lng());\n        locateUser(schedulePromise, {\n          latitude: loc.lat(),\n          longitude: loc.lng(),\n        }).then(position => {\n          if (!placeMapMarker) {\n            placeMapMarker = new google.maps.Marker({\n              position: new google.maps.LatLng(\n                position.location.latitude,\n                position.location.longitude,\n              ),\n              title: 'Search Location',\n              icon: placeShape,\n              map: map,\n              animation: google.maps.Animation.DROP,\n              zIndex: 1000,\n            }) as LinkableMarker;\n            placeMapMarker.Type = Type.STOP;\n            google.maps.event.addListener(placeMapMarker, 'click', clickEvent);\n          }\n          placeMapMarker.Value = position.stop;\n          openStop(position.stop);\n        });\n      });\n      return map;\n    });\n  }\n\n  Promise.all([\n    documentPromise.then(mapLoad),\n    schedulePromise.then(markersAndLatLng),\n  ]).then(function([map, { markers, bounds }]) {\n    map.setCenter(bounds.getCenter());\n    map.fitBounds(bounds);\n    google.maps.event.addListener(map, 'bounds_changed', function() {\n      const mapBounds = map.getBounds()!;\n      for (const marker of markers) {\n        if (mapBounds.contains(marker.getPosition()!)) {\n          if (marker.getMap() !== map) marker.setMap(map);\n        } else {\n          marker.setMap(null);\n        }\n      }\n    });\n    markers.forEach(marker => marker.setMap(map));\n    locatePromise.then(function(position) {\n      userMapMarker = new google.maps.Marker({\n        position: new google.maps.LatLng(\n          position.location.latitude,\n          position.location.longitude,\n        ),\n        title: position.custom ? 'Location of Place' : 'My Location',\n        icon: position.custom ? placeShape : userShape,\n        map: map,\n        animation: google.maps.Animation.DROP,\n        zIndex: 1000,\n      }) as LinkableMarker;\n      userMapMarker.Type = Type.STOP;\n      userMapMarker.Value = position.stop;\n      google.maps.event.addListener(userMapMarker, 'click', clickEvent);\n      if (!Active.STOP) openStop(position.stop);\n      window.addEventListener('locationupdate', (evt: Event) => {\n        const { custom, location } = (evt as CustomEvent<\n          LocationUpdate\n        >).detail;\n        userMapMarker!.setIcon(custom ? placeShape : userShape);\n        userMapMarker!.setPosition(\n          new google.maps.LatLng(location.latitude, location.longitude),\n        );\n      });\n    });\n  });\n\n  window.addEventListener('resize', function() {\n    google.maps.event.trigger(map, 'resize');\n    google.maps.event.trigger(streetview, 'resize');\n    if (!Active.Route.ID) {\n      map!.setCenter(boundsAllStops!.getCenter());\n      map!.fitBounds(boundsAllStops!);\n    }\n  });\n}\n\nPromise.all([documentPromise.then(hydrateAside), schedulePromise, locatePromise]).then(([onLocationChange, schedule, locationResult]) => {\n  onLocationChange(new Set(schedule.stops[locationResult.stop].routes))\n});\n\ndocumentPromise.then(function() {\n  uiEvents();\n});\n\nfunction openActive(state: ActiveState) {\n  console.log(state);\n  return Promise.all([\n    openRoute(state.Route.ID!).then(bestTrip =>\n      openTrip(state.Route.TRIP ? state.Route.TRIP : bestTrip!),\n    ),\n    state.STOP ? openStop(state.STOP) : undefined,\n  ]).then(() => {});\n}\n\nPromise.all([documentPromise, schedulePromise]).then(function() {\n  if (!window.history.state && window.location.search.includes('#!')) {\n    const vars = getQueryVariables();\n    Active.Route.ID = vars['route'] || Active.Route.ID;\n    Active.Route.TRIP = vars['trip'] || Active.Route.TRIP;\n    Active.STOP = vars['stop'] || Active.STOP;\n\n    openActive(Active);\n  } else if (window.history.state) {\n    setActiveState(window.history.state);\n    openActive(Active);\n  }\n});\n\nwindow.onhashchange = function() {\n  const vars = getQueryVariables();\n  Active.Route.ID = vars['route'] || Active.Route.ID;\n  Active.Route.TRIP = vars['trip'] || Active.Route.TRIP;\n  Active.STOP = vars['stop'] || Active.STOP;\n  openActive(Active);\n};\nwindow.onpopstate = function(e: PopStateEvent) {\n  setActiveState(e.state);\n  openActive(Active);\n};\n\n/**\n * Adds click events to buttons in the site.\n */\nfunction uiEvents() {\n  if (!navigator.onLine) {\n    document.getElementById('main')!.classList.add('offline');\n  }\n  document\n    .getElementById('map-toggle')!\n    .addEventListener('click', switchMapStreetview);\n  const select = document.getElementById('trip-select') as HTMLSelectElement &\n    Linkable;\n  select.Type = Type.TRIP;\n  select.addEventListener('change', function(e) {\n    select.Value = select.options[select.selectedIndex].value;\n    clickEvent.call(select, e);\n  });\n\n  function toggleSidebar() {\n    document.getElementById('aside')!.classList.toggle('open');\n  }\n  document\n    .getElementById('screen-cover')!\n    .addEventListener('click', toggleSidebar);\n  document.getElementById('menu')!.addEventListener('click', toggleSidebar);\n  document.getElementById('alt-menu')!.addEventListener('click', toggleSidebar);\n}\n\nfunction removeChildren(parent: HTMLElement) {\n  while (parent.firstChild) parent.removeChild(parent.firstChild);\n}\n\n/**\n * Swaps map and streetview divs\n * @return {[type]} [description]\n */\nfunction switchMapStreetview(this: HTMLElement) {\n  if (!map || !streetview) {\n    console.error('Map and StreetViewPanorama have not loaded');\n    throw new TypeError();\n  }\n\n  const mapParent = document.getElementById('map')!;\n  const panoParent = document.getElementById('streetview-header')!;\n\n  if (Active.View.STOP === View.MAP_PRIMARY) {\n    mapParent.insertBefore(\n      document.getElementById('streetview-canvas')!,\n      mapParent.firstChild,\n    );\n    panoParent.insertBefore(\n      document.getElementById('map-canvas')!,\n      mapParent.firstChild,\n    );\n    this.classList.add('on');\n    Active.View.STOP = View.STREET_PRIMARY;\n  } else if (Active.View.STOP === View.STREET_PRIMARY) {\n    mapParent.insertBefore(\n      document.getElementById('map-canvas')!,\n      mapParent.firstChild,\n    );\n    panoParent.insertBefore(\n      document.getElementById('streetview-canvas')!,\n      mapParent.firstChild,\n    );\n    this.classList.remove('on');\n    Active.View.STOP = View.MAP_PRIMARY;\n  }\n  dispatchEvent(updateEvent);\n}\n\n/**\n * Creates a route UI and opens the section if the map is currently in fullscreen mode.\n * @param  {string} route_id ID of the route\n * @return {Promise<string>} trip_id that can be used in openTrip. Best matches time and open stop, if any.\n * @throws {string} If the ID does not exist\n */\nfunction openRoute(route_id: Route['route_id']) {\n  return schedulePromise.then(buses => {\n    const thisRoute = buses.routes[route_id];\n    if (!thisRoute || !thisRoute.route_id) {\n      console.error('Invalid Route %s', route_id);\n      //throw route_id;\n      return;\n    }\n\n    Active.Route.ID = route_id;\n    Active.Route.TRIP = null;\n\n    document.title = thisRoute.route_long_name;\n\n    document.body.style.setProperty(\n      '--route-color',\n      `#${thisRoute.route_color}`,\n    );\n    document.body.style.setProperty(\n      '--route-text-color',\n      `#${thisRoute.route_text_color}`,\n    );\n\n    const name = document.getElementById('route_long_name')!;\n    name.textContent = thisRoute.route_long_name;\n\n    let firstStop: Stop['stop_id'] | undefined;\n    let lastStop: Stop['stop_id'] | undefined;\n    let largest = 0;\n    let earliest = new Date(0, 0, 0, 23, 59, 59, 0);\n    let latest = new Date(0, 0, 0, 0, 0, 0, 0);\n    let earliestTrip: Trip['trip_id'] | undefined;\n    let earliestTripStop: Stop['stop_id'] | undefined;\n\n    const nowTime = nowDateTime();\n    let closestTrip: Trip['trip_id'] | undefined;\n    let closestTripTime = Number.MAX_VALUE;\n    let closestTripStop: Stop['stop_id'] | undefined;\n    const select = document.getElementById('trip-select')!;\n    removeChildren(select);\n\n    const routeStops = new Set<Stop['stop_id']>();\n\n    for (const trip_id of Object.keys(thisRoute.trips)) {\n      const trip = thisRoute.trips[trip_id];\n      for (const stop in trip.stop_times) {\n        if (stop == '1' && toInt(trip.direction_id) === 0) {\n          firstStop = trip.stop_times[stop].stop_id;\n        } else {\n          if (toInt(stop) > largest && toInt(trip.direction_id) === 0) {\n            largest = toInt(stop);\n            lastStop = trip.stop_times[stop].stop_id;\n          }\n        }\n\n        routeStops.add(trip.stop_times[stop].stop_id);\n\n        const timeDate = gtfsArrivalToDate(trip.stop_times[stop].arrival_time);\n        if (timeDate > latest) {\n          latest = timeDate;\n        }\n        if (timeDate < earliest) {\n          earliest = timeDate;\n          earliestTrip = trip.trip_id;\n          earliestTripStop = trip.stop_times[stop].stop_id;\n        }\n\n        if (\n          timeDate.getTime() - nowTime.getTime() < closestTripTime &&\n          timeDate.getTime() - nowTime.getTime() > 0\n        ) {\n          closestTripTime = timeDate.getTime() - nowTime.getTime();\n          closestTrip = trip.trip_id;\n          closestTripStop = trip.stop_times[stop].stop_id;\n        }\n      }\n      if (!closestTrip) {\n        //Too late for all bus routes\n        closestTripTime =\n          new Date(\n            0,\n            0,\n            1,\n            earliest.getHours(),\n            earliest.getMinutes(),\n            earliest.getSeconds(),\n            0,\n          ).getTime() - nowTime.getTime();\n        closestTrip = earliestTrip;\n        closestTripStop = earliestTripStop;\n      }\n      const option = createElement('option', {\n        value: trip.trip_id,\n        textContent: trip.trip_short_name,\n      });\n      select.appendChild(option);\n    }\n\n    const minString =\n      Math.floor(closestTripTime / 60000) != 1\n        ? Math.floor(closestTripTime / 60000) + ' minutes'\n        : '1 minute';\n    document.getElementById('place-value')!.textContent =\n      'Between ' +\n      buses!.stops[firstStop!].stop_name +\n      ' - ' +\n      buses!.stops[lastStop!].stop_name;\n    document.getElementById('time-value')!.textContent =\n      stringTime(earliest) + ' - ' + stringTime(latest);\n    document.getElementById('next-stop-value')!.textContent =\n      'Reaches ' +\n      buses!.stops[closestTripStop!].stop_name +\n      ' in ' +\n      minString;\n\n    document.getElementById('main')!.classList.add('open');\n\n    if (\n      navigator.onLine &&\n      typeof google === 'object' &&\n      typeof google.maps === 'object'\n    ) {\n      const routeBounds = new google.maps.LatLngBounds();\n      for (const marker of markers) {\n        if (routeStops.has(marker.stop_id)) {\n          marker.setIcon(normal);\n          marker.setZIndex(200);\n          marker.activeInRoute = true;\n          routeBounds.extend(marker.getPosition()!);\n        } else {\n          marker.setIcon(unimportant);\n          marker.setZIndex(null);\n          marker.activeInRoute = false;\n        }\n      }\n      if (stopMarker) {\n        stopMarker.setIcon(stopShape);\n        stopMarker.setZIndex(300);\n      }\n\n      google.maps.event.trigger(map, 'resize');\n      map!.setCenter(routeBounds.getCenter());\n      map!.fitBounds(routeBounds);\n      google.maps.event.trigger(streetview, 'resize');\n    }\n\n    window.dispatchEvent(updateEvent);\n    openTrip(closestTrip!);\n    return closestTrip;\n  });\n}\n\n/**\n * Creates a Stop fragment in the #stop element\n * @param  {[type]} stop_id Id of the stop to use\n * @return {void}           Creates an element\n */\nfunction openStop(stop_id: Stop['stop_id']) {\n  return schedulePromise.then(buses => {\n    const thisStop = buses.stops[stop_id];\n    if (!thisStop || !thisStop.stop_id) {\n      console.error('Invalid Stop %s', stop_id);\n      //throw stop_id;\n      return;\n    }\n\n    Active.STOP = stop_id;\n\n    if (streetview) {\n      streetview.setPosition(stopToPos(thisStop));\n    }\n    if (map) {\n      for (const marker of markers) {\n        if (marker.activeInRoute || Active.Route.ID == null) {\n          marker.setIcon(normal);\n        } else {\n          marker.setIcon(unimportant);\n        }\n        if (marker.stop_id === thisStop.stop_id) {\n          stopMarker = marker;\n        }\n      }\n\n      stopMarker!.setIcon(stopShape);\n      stopMarker!.setZIndex(300);\n\n      streetview!.setPosition(stopMarker!.getPosition()!);\n      google.maps.event.trigger(streetview, 'resize');\n      google.maps.event.addListener(streetview!, 'pano_changed', function() {\n        document.getElementById(\n          'address',\n        )!.textContent = streetview!.getLocation().description!;\n        streetview!.setPov(streetview!.getPhotographerPov());\n      });\n    }\n    if (!streetview) {\n      document.getElementById('stop')!.classList.add('no-streetview');\n    }\n\n    document.getElementById('stop_name')!.textContent = thisStop.stop_name;\n\n    const list = document.getElementById('connections')!;\n    removeChildren(list);\n    for (const route_id of thisStop.routes) {\n      const route = buses.routes[route_id];\n      const linkItem = dynamicLinkNode(Type.ROUTE, route_id, false);\n      linkItem.className = 'connections__link';\n      linkItem.style.borderColor = `#${route.route_color}`;\n      linkItem.textContent = route.route_long_name;\n\n      const listItem = document.createElement('li');\n      listItem.className = 'connections__item';\n      listItem.append(linkItem);\n      if (Active.Route.ID === route_id) {\n        listItem.classList.add('connections__item--active-route');\n      }\n      list.append(listItem);\n    }\n\n    document.getElementById('main')!.classList.add('open-stop');\n    window.dispatchEvent(updateEvent);\n  });\n}\n\nfunction openTrip(trip_id: Trip['trip_id']) {\n  return schedulePromise.then(buses => {\n    const route = buses.routes[Active.Route.ID!];\n    const trip = route.trips[trip_id];\n    if (!trip || !trip.trip_id) {\n      console.error('Invalid trip %s in route %s', trip_id, Active.Route.ID);\n      //throw trip_id;\n      return;\n    }\n\n    Active.Route.TRIP = trip_id;\n\n    const schedule = document.getElementById('schedule')!;\n    removeChildren(schedule);\n\n    const stopSequence = sequence(trip.stop_times);\n\n    const select = document.getElementById('trip-select') as HTMLSelectElement;\n    for (let option = 0; option < select.options.length; option++) {\n      if (select.options[option].value === trip_id) {\n        select.selectedIndex = option;\n        select.options[option].selected = true;\n        break;\n      }\n    }\n\n    document.getElementById('week-days-value')!.textContent =\n      buses.calendar[trip.service_id].text_name;\n\n    for (const sequence of stopSequence) {\n      const tripStop = trip.stop_times[sequence];\n      const routeListItem = dynamicLinkNode(Type.STOP, tripStop.stop_id);\n      routeListItem.className = 'schedule__stop';\n\n      const lines = createElement('div', { className: 'lines' });\n      for (let j = 0; j < 2; j++) {\n        const line = createElement('span', { className: 'line' });\n        lines.appendChild(line);\n      }\n      routeListItem.appendChild(lines);\n\n      const name = createElement('span', {\n        className: 'schedule__stopname name',\n        textContent: buses.stops[tripStop.stop_id].stop_name,\n      });\n      routeListItem.appendChild(name);\n\n      const time = createElement('time', {\n        className: 'schedule__time',\n        textContent: gtfsArrivalToString(tripStop.arrival_time),\n      });\n      routeListItem.appendChild(time);\n\n      const connection = createElement('div', {\n        className: 'connections',\n      });\n      for (const connectRoute of buses.stops[tripStop.stop_id].routes) {\n        if (connectRoute === Active.Route.ID) {\n          continue;\n        }\n\n        const item = createElement('span', {\n          className: 'route-dash',\n          title: buses.routes[connectRoute].route_long_name,\n        });\n        item.style.backgroundColor = buses.routes[connectRoute].route_color;\n\n        connection.appendChild(item);\n      }\n      routeListItem.appendChild(connection);\n      schedule.appendChild(routeListItem);\n    }\n\n    window.dispatchEvent(updateEvent);\n  });\n}\n\nopenCallbacks[Type.ROUTE] = openRoute;\nopenCallbacks[Type.STOP] = openStop;\nopenCallbacks[Type.TRIP] = openTrip;\n","import { Route } from \"../gtfs-types\";\nimport { Type, convertToLinkable } from './load';\n\n/**\n * Hydrate the pre-rendered sidebar HTML.\n */\nexport function hydrateAside() {\n  const nearbyList = document.getElementById('nearby')!;\n  const otherList = document.getElementById('other')!;\n\n  const routeListItems = new Map<string, HTMLLIElement>();\n  for (const child of otherList.children) {\n    const listItem = child as HTMLLIElement;\n    const route_id = listItem.dataset.route!;\n\n    const link = listItem.querySelector<HTMLAnchorElement>('a.routes__link')!;\n    convertToLinkable(link, Type.ROUTE, route_id, true);\n\n    routeListItems.set(route_id, listItem);\n  }\n\n  let firstLocationChange = true;\n\n  return function onLocationChange(nearbyRoutes: Set<Route['route_id']>) {\n    if (firstLocationChange) {\n      // Remove all children from nearby list\n      while (nearbyList.firstChild) nearbyList.removeChild(nearbyList.firstChild);\n    }\n    firstLocationChange = false;\n\n    for (const [route_id, listItem] of routeListItems) {\n      if (nearbyRoutes.has(route_id)) {\n        nearbyList.appendChild(listItem);\n      } else {\n        otherList.appendChild(listItem);\n      }\n    }\n  }\n}\n"],"names":["toInt","n","Number","parseInt","Type","View","Active","Route","ID","TRIP","STOP","ROUTE","LIST","MAP_PRIMARY","updateEvent","CustomEvent","navigator","serviceWorker","register","openCallbacks","normal","url","size","height","width","scaledSize","origin","x","y","anchor","unimportant","userShape","placeShape","stopShape","setActiveState","newState","createElement","type","props","Object","assign","document","locateUser","busPromise","customLocation","locatePromise","Promise","resolve","coords","customLocationFlag","reject","geolocation","getCurrentPosition","closestStop","closestDistance","MAX_VALUE","all","then","e","schedule","userPos","stop_id","keys","stops","stop","distance","Math","sqrt","pow","latitude","parseFloat","stop_lat","longitude","stop_lon","location","custom","Error","JSON","stringify","pageLink","value","params","URLSearchParams","set","console","warn","convertToLinkable","node","update","Value","href","addEventListener","clickEvent","dynamicLinkNode","preventDefault","stopPropagation","link","state","val","newLink","callback","history","pushState","ga","page","title","openLinkable","this","getQueryVariables","vars","query","window","hash","indexOf","substring","split","search","result","parts","key","stringTime","date","lastIndexOf","hour","min","second","map","Date","TypeError","m","displayHour","displayMinute","hr","getHours","getMinutes","toString","gtfsArrivalToDate","string","s","extraDays","extraHours","floor","gtfsArrivalToString","streetview","autocomplete","boundsAllStops","userMapMarker","stopMarker","markers","documentPromise","readyState","schedulePromise","fetch","res","ok","json","statusText","placeMapMarker","onLine","google","maps","body","classList","add","LatLngBounds","mapElement","getElementById","panoElement","STREET_PRIMARY","Map","center","LatLng","zoom","mapTypeControlOptions","position","ControlPosition","TOP_CENTER","panControlOptions","RIGHT_TOP","streetViewControlOptions","zoomControlOptions","StreetViewPanorama","visible","pov","heading","pitch","scrollwheel","RIGHT_CENTER","style","ZoomControlStyle","SMALL","addressControl","setStreetView","places","Autocomplete","bindTo","event","addListener","place","getPlace","geometry","loc","log","lat","lng","Marker","icon","animation","Animation","DROP","zIndex","openStop","values","marker","stopToPos","stop_name","extend","getPosition","push","bounds","setCenter","getCenter","fitBounds","mapBounds","getBounds","contains","getMap","setMap","forEach","evt","detail","setIcon","setPosition","trigger","loadMap","err","error","openActive","openRoute","bestTrip","openTrip","undefined","removeChildren","parent","firstChild","removeChild","switchMapStreetview","mapParent","panoParent","insertBefore","remove","dispatchEvent","route_id","buses","thisRoute","routes","firstStop","lastStop","route_long_name","setProperty","route_color","route_text_color","textContent","earliestTrip","earliestTripStop","largest","earliest","latest","nowTime","now","getSeconds","nowDateTime","closestTrip","closestTripStop","closestTripTime","select","routeStops","Set","trip_id","trips","trip","stop_times","direction_id","timeDate","arrival_time","getTime","option","trip_short_name","appendChild","minString","routeBounds","has","setZIndex","activeInRoute","thisStop","getLocation","description","setPov","getPhotographerPov","list","route","linkItem","className","borderColor","listItem","append","stopSequence","stopTimes","sort","a","b","sequence","options","length","selectedIndex","selected","calendar","service_id","text_name","tripStop","routeListItem","lines","j","line","name","time","connection","connectRoute","item","backgroundColor","nearbyList","otherList","routeListItems","child","children","dataset","querySelector","firstLocationChange","nearbyRoutes","onLocationChange","locationResult","toggleSidebar","toggle","call","uiEvents","includes","onhashchange","onpopstate"],"mappings":"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"}