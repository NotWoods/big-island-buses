const e="network-or-cache";function t(e,t){return new Promise((n,s)=>{const o=setTimeout(s,t);fetch(e).then(e=>{clearTimeout(o),n(e)},s)})}function n(t){return caches.open(e).then(e=>e.match(t)).then(e=>{if(e)return e;throw new Error(`${t} not cached`)})}self.addEventListener("install",t=>{t.waitUntil(caches.open(e).then(e=>e.addAll(["./","index.html","style.css","main.js","api.json","assets/logo.svg","assets/lines.svg","assets/tigeroakes.svg","icon/favicon.ico","icon/maskable.png","icon/transparent.png"])))}),self.addEventListener("fetch",s=>{const o=new URL(s.request.url);o.host===location.host?o.pathname.includes("/routes/")?s.respondWith(t(s.request,400).catch(()=>n("index.html"))):s.respondWith(t(s.request,400).then(t=>(s.waitUntil(function(t,n){return caches.open(e).then(e=>e.put(t,n))}(s.request,t)),t),()=>n(s.request))):s.respondWith(fetch(s.request))});
//# sourceMappingURL=service-worker.js.map
