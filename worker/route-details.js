const e=e=>Number.parseInt(e,10);function t(t){const[s,o,n]=t.split(":").map((t=>e(t)));let i=0,r=0;return s>23&&(i=Math.floor(s/24),r=s%24),new Date(0,0,0+i,s+r,o,n,0)}!function(e){function t(e,t,s){t?(console.error("Worker caught an error:",t),self.postMessage([e,t])):self.postMessage([e,null,s])}self.addEventListener("message",(function(s){const o=s.data;if(!Array.isArray(o)||2!==o.length)return;const[n,i]=o;Promise.resolve(e(i)).then((e=>t(n,null,e)),(e=>t(n,e)))}))}((s=>function(s,o){let n,i,r,a,c,u,l=1/0,g=-1,p=new Date(0,0,0,23,59,59,0),d=new Date(0,0,0,0,0,0,0),f=Number.MAX_VALUE;const m=new Set;for(const _ of s){for(const s of _.stop_times){const T=s.stop_sequence;0===e(_.direction_id)&&(T<l&&(n=s.stop_id,l=T),T>g&&(i=s.stop_id,g=T)),m.add(s.stop_id);const w=t(s.arrival_time);w>d&&(d=w),w<p&&(p=w,r=_.trip_id,a=s.stop_id),w.getTime()-o.getTime()<f&&w.getTime()-o.getTime()>0&&(f=w.getTime()-o.getTime(),c=_.trip_id,u=s.stop_id)}c||(f=new Date(0,0,1,p.getHours(),p.getMinutes(),p.getSeconds(),0).getTime()-o.getTime(),c=r,u=a)}return{firstStop:n,lastStop:i,earliest:p,latest:d,stops:m,closestTrip:{id:c,minutes:Math.floor(f/6e4),stop:u}}}(s,function(){const e=new Date;return new Date(0,0,0,e.getHours(),e.getMinutes(),e.getSeconds(),0)}())));
//# sourceMappingURL=route-details.js.map
