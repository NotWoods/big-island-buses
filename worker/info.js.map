{"version":3,"file":"info.js","sources":["../../src/page/utils/num.ts","../../src/page/utils/date.ts","../../src/worker/register.ts","../../node_modules/spherical-geometry-js/src/utils.js","../../node_modules/spherical-geometry-js/src/latlng.js","../../node_modules/spherical-geometry-js/src/compute-distance-between.js","../../src/worker/info/closest-stop-worker.ts","../../src/worker/info/route-details-worker.ts","../../src/worker/info/index.ts"],"sourcesContent":[null,null,null,"/** @type {number} Earth's radius (at the Equator) of 6378137 meters. */\nexport const EARTH_RADIUS = 6378137;\n\nexport function toDegrees(radians) {\n    return (radians * 180) / Math.PI;\n}\n\nexport function toRadians(angleDegrees) {\n    return (angleDegrees * Math.PI) / 180.0;\n}\n","const LAT = 'latitude';\nconst LNG = 'longitude';\n\n/**\n * Converts an object into a LatLng. Tries a few different methods:\n * 1. If instanceof LatLng, clone and return the object\n * 2. If it has 'lat' and 'lng' properties...\n *    2a. if the properties are functions (like Google LatLngs),\n *        use the lat() and lng() values as lat and lng\n *    2b. otherwise get lat and lng, parse them as floats and try them\n * 3. If it has 'lat' and *'long'* properties,\n *    parse them as floats and return a LatLng\n * 4. If it has 'lat' and *'lon'* properties,\n *    parse them as floats and return a LatLng\n * 5. If it has 'latitude' and 'longitude' properties,\n *    parse them as floats and return a LatLng\n * 6. If it has number values for 0 and 1, use 1 as latitude and 0\n *    as longitude.\n * 7. If it has x and y properties, try using y as latitude and x and\n *    longitude.\n * @param {any} like\n * @returns {LatLng}\n */\nexport function convert(like) {\n    if (like instanceof LatLng) {\n        return new LatLng(like[LAT], like[LNG]);\n    } else if ('lat' in like && 'lng' in like) {\n        if (typeof like.lat == 'function' && typeof like.lng == 'function') {\n            return new LatLng(like.lat(), like.lng());\n        } else {\n            return new LatLng(parseFloat(like.lat), parseFloat(like.lng));\n        }\n    } else if ('lat' in like && 'long' in like) {\n        return new LatLng(parseFloat(like.lat), parseFloat(like.long));\n    } else if ('lat' in like && 'lon' in like) {\n        return new LatLng(parseFloat(like.lat), parseFloat(like.lon));\n    } else if ('latitude' in like && 'longitude' in like) {\n        return new LatLng(\n            parseFloat(like.latitude),\n            parseFloat(like.longitude)\n        );\n    } else if (typeof like[0] === 'number' && typeof like[1] === 'number') {\n        return new LatLng(like[1], like[0]);\n    } else if ('x' in like && 'y' in like) {\n        return new LatLng(parseFloat(like.y), parseFloat(like.x));\n    } else {\n        throw new TypeError(`Cannot convert ${like} to LatLng`);\n    }\n}\n\n/**\n * Comparison function\n * @param {LatLng} one\n * @param {LatLng} two\n * @returns {boolean}\n */\nexport function equals(one, two) {\n    one = convert(one);\n    two = convert(two);\n    return (\n        Math.abs(one[LAT] - two[LAT]) < Number.EPSILON &&\n        Math.abs(one[LNG] - two[LNG]) < Number.EPSILON\n    );\n}\n\nexport default class LatLng {\n    /**\n     * @param {number} lat\n     * @param {number} lng\n     * @param {boolean} noWrap\n     */\n    constructor(lat, lng, noWrap = false) {\n        lat = parseFloat(lat);\n        lng = parseFloat(lng);\n\n        if (Number.isNaN(lat) || Number.isNaN(lng)) {\n            throw TypeError('lat or lng are not numbers');\n        }\n\n        if (!noWrap) {\n            //Constrain lat to -90, 90\n            lat = Math.min(Math.max(lat, -90), 90);\n            //Wrap lng using modulo\n            lng = lng == 180 ? lng : ((((lng + 180) % 360) + 360) % 360) - 180;\n        }\n\n        Object.defineProperty(this, LAT, { value: lat });\n        Object.defineProperty(this, LNG, { value: lng });\n        this.length = 2;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * Comparison function\n     * @param {LatLng} other\n     * @returns {boolean}\n     */\n    equals(other) {\n        return equals(this, other);\n    }\n\n    /**\n     * Returns the latitude in degrees.\n     * (I'd rather use getters but this is for consistency)\n     * @returns {number}\n     */\n    lat() {\n        return this[LAT];\n    }\n\n    /**\n     * Returns the longitude in degrees.\n     * (I'd rather use getters but this is for consistency)\n     * @returns {number}\n     */\n    lng() {\n        return this[LNG];\n    }\n\n    /** @type {number} alias for lng */\n    get x() {\n        return this[LNG];\n    }\n    /** @type {number} alias for lat */\n    get y() {\n        return this[LAT];\n    }\n    /** @type {number} alias for lng */\n    get 0() {\n        return this[LNG];\n    }\n    /** @type {number} alias for lat */\n    get 1() {\n        return this[LAT];\n    }\n    /** @type {number} alias for lng */\n    get long() {\n        return this[LNG];\n    }\n    /** @type {number} alias for lng */\n    get lon() {\n        return this[LNG];\n    }\n\n    /**\n     * Converts to JSON representation. This function is intended to be used via\n     * JSON.stringify.\n     * @returns {LatLngLiteral}\n     */\n    toJSON() {\n        return { lat: this[LAT], lng: this[LNG] };\n    }\n\n    /**\n     * Converts to string representation.\n     * @returns {string}\n     */\n    toString() {\n        return `(${this[LAT]}, ${this[LNG]})`;\n    }\n\n    /**\n     * Returns a string of the form \"lat,lng\" for this LatLng. We round the\n     * lat/lng values to 6 decimal places by default.\n     * @param {number} [precision=6]\n     * @returns {string}\n     */\n    toUrlValue(precision = 6) {\n        precision = parseInt(precision);\n        return (\n            parseFloat(this[LAT].toFixed(precision)) +\n            ',' +\n            parseFloat(this[LNG].toFixed(precision))\n        );\n    }\n\n    [Symbol.iterator]() {\n        let i = 0;\n        return {\n            next: () => {\n                if (i < this.length) {\n                    return { value: this[i++], done: false };\n                } else {\n                    return { done: true };\n                }\n            },\n            [Symbol.iterator]() {\n                return this;\n            },\n        };\n    }\n}\n","import { EARTH_RADIUS, toRadians } from './utils.js';\nimport { convert } from './latlng.js';\n\nexport function computeDistanceBetweenHelper(from, to) {\n    const radFromLat = toRadians(from.lat());\n    const radFromLng = toRadians(from.lng());\n    const radToLat = toRadians(to.lat());\n    const radToLng = toRadians(to.lng());\n    return (\n        2 *\n        Math.asin(\n            Math.sqrt(\n                Math.pow(Math.sin((radFromLat - radToLat) / 2), 2) +\n                    Math.cos(radFromLat) *\n                        Math.cos(radToLat) *\n                        Math.pow(Math.sin((radFromLng - radToLng) / 2), 2)\n            )\n        )\n    );\n}\n\n/**\n * Returns the distance, in meters, between to LatLngs. You can optionally\n * specify a custom radius. The radius defaults to the radius of the Earth.\n * @param {LatLng} from\n * @param {LatLng} to\n * @param {number} [radius]\n * @returns {number} distance\n */\nexport default function computeDistanceBetween(\n    from,\n    to,\n    radius = EARTH_RADIUS\n) {\n    from = convert(from);\n    to = convert(to);\n    return computeDistanceBetweenHelper(from, to) * radius;\n}\n",null,null,null],"names":[],"mappings":"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"}